<?php
require_once 'config/configdb.php';
require_once 'includes/functions.php';

$stmt = $conn->prepare("SELECT PeriodCode FROM STDC_Periods ORDER BY PeriodCode ASC");
$stmt->execute();
$periods = $stmt->fetchAll(PDO::FETCH_COLUMN);

// Menu items
$menu_items = array(
    'item_detail' => 'ITEM Detail Master',
    'bom_master' => 'BOM_master',
    'std_cost' => 'STD_COST RM',
    'time_manufacturing' => 'Time Manufacturing',
    'std_allocation' => 'Std allocation rate',
    'indirect_allocation_master' => 'Indirect allocation master',
    'indirect_allocation' => 'Indirect allocat rate',
    'allocation_basic' => 'Allocation basic master',
);

// Table mapping
$table_map = array(
    'item_detail' => 'STDC_Item_Detail',
    'bom_master'  => 'STDC_BOM_master',
    'std_cost'    => 'STDC_Std_cost',
    'time_manufacturing' => 'STDC_Time_Manufacturing',
    'std_allocation' => 'STDC_Std_allocation_rate',
    'indirect_allocation_master' => 'STDC_Indirect_allocation_master',
    'indirect_allocation' => 'STDC_Indirect_allocat_rate',
    'allocation_basic' => 'STDC_Allocation_basic_master'
);

function getTableColumns($conn, $tableName) {
    $sql = "SELECT COLUMN_NAME
            FROM INFORMATION_SCHEMA.COLUMNS
            WHERE TABLE_NAME = :tableName
            ORDER BY ORDINAL_POSITION";
    $stmt = $conn->prepare($sql);
    $stmt->execute([':tableName' => $tableName]);
    return $stmt->fetchAll(PDO::FETCH_COLUMN);
}

function validateAndInsertData($conn, $pageKey, $selectedPeriod, $table_map) {
    $folder = __DIR__ . '/../uploads/' . $pageKey;
    $filename = $selectedPeriod . '.csv';
    $filepath = $folder . '/' . $filename;
    
    $result = [
        'status' => '❌',
        'message' => 'File not found'
    ];
    
    // เช็คว่าไฟล์มีอยู่หรือไม่
    if (!file_exists($filepath)) {
        return $result;
    }
    
    try {
        $tableName = $table_map[$pageKey];
        $expectedColumns = getTableColumns($conn, $tableName);
        
        // อ่านหัวคอลัมน์จากไฟล์ CSV
        $handle = fopen($filepath, 'r');
        if ($handle === false) {
            $result['message'] = 'Cannot open file';
            return $result;
        }
        
        $csvHeader = fgetcsv($handle);
        if (!$csvHeader) {
            fclose($handle);
            $result['message'] = 'Invalid CSV format';
            return $result;
        }
        
        // ทำความสะอาดคอลัมน์ทั้งสองฝั่ง
        $csvHeaderClean = array_map(function($col) {
            return strtolower(trim($col, " \t\n\r\0\x0B\"'"));
        }, $csvHeader);
        
        $expectedColumnsClean = array_map(function($col) {
            return strtolower(trim($col, " \t\n\r\0\x0B\"'"));
        }, $expectedColumns);
        
        // Debug information - เพิ่มข้อมูล debug
        $debugInfo = [
            'csv_columns_count' => count($csvHeaderClean),
            'db_columns_count' => count($expectedColumnsClean),
            'csv_columns' => $csvHeaderClean,
            'db_columns' => $expectedColumnsClean,
            'missing_in_csv' => array_diff($expectedColumnsClean, $csvHeaderClean),
            'extra_in_csv' => array_diff($csvHeaderClean, $expectedColumnsClean)
        ];
        
        // เช็คจำนวนคอลัมน์และความตรงกัน
        if (count($csvHeaderClean) !== count($expectedColumnsClean)) {
            fclose($handle);
            $result['message'] = 'Error: Column count mismatch - CSV:' . count($csvHeaderClean) . ' vs DB:' . count($expectedColumnsClean);
            $result['debug'] = $debugInfo;
            return $result;
        }
        
        // เช็คว่าคอลัมน์ทั้งหมดตรงกันหรือไม่
        $columnDiff = array_diff($csvHeaderClean, $expectedColumnsClean);
        if (!empty($columnDiff)) {
            fclose($handle);
            $result['message'] = 'Error: Invalid columns - Missing: ' . implode(', ', $debugInfo['missing_in_csv']) . 
                               ' | Extra: ' . implode(', ', $debugInfo['extra_in_csv']);
            $result['debug'] = $debugInfo;
            return $result;
        }
        
        // ถ้าคอลัมน์ถูกต้อง ให้ลอง insert ข้อมูลลง temp table หรือ validate ข้อมูล
        $conn->beginTransaction();
        
        try {
            // เช็คว่าตารางมีข้อมูลอยู่แล้วหรือไม่
            $checkStmt = $conn->prepare("SELECT COUNT(*) FROM $tableName");
            $checkStmt->execute();
            $existingRecords = $checkStmt->fetchColumn();
            
            // Truncate table ก่อน insert (เฉพาะเมื่อมีข้อมูลเดิม)
            if ($existingRecords > 0) {
                $conn->exec("TRUNCATE TABLE $tableName");
            }
            
            // เตรียม insert statement โดยใช้คอลัมน์จากฐานข้อมูล
            $placeholders = implode(',', array_fill(0, count($expectedColumns), '?'));
            $sql = "INSERT INTO $tableName (" . implode(',', $expectedColumns) . ") VALUES ($placeholders)";
            $stmtInsert = $conn->prepare($sql);
            
            $rowIndex = 0;
            $insertCount = 0;
            $errorRows = [];
            
            // รีเซ็ตตำแหน่งไฟล์กลับไปที่จุดเริ่มต้น
            rewind($handle);
            fgetcsv($handle); // ข้ามหัวตาราง
            
            // อ่านและ insert ข้อมูลแต่ละแถว
            while (($data = fgetcsv($handle, 1000, ",")) !== false) {
                $rowIndex++;
                
                if (count($data) < count($expectedColumns)) {
                    $errorRows[] = "Row $rowIndex: Insufficient columns (" . count($data) . "/" . count($expectedColumns) . ")";
                    continue; // ข้ามแถวที่ข้อมูลไม่ครบ
                }
                
                try {
                    // ประมวลผลข้อมูลตามประเภทของ pageKey
                    $processedData = processDataByPageKey($pageKey, $data, $expectedColumns);
                    
                    $stmtInsert->execute($processedData);
                    $insertCount++;
                } catch (Exception $rowError) {
                    $errorRows[] = "Row $rowIndex: " . $rowError->getMessage();
                    // หากต้องการให้หยุดเมื่อมี error ให้ uncomment บรรทัดต่อไปนี้
                    // throw $rowError;
                }
            }
            
            $conn->commit();
            
            $successMessage = "Success - {$insertCount} records inserted";
            if (!empty($errorRows)) {
                $successMessage .= " (" . count($errorRows) . " rows skipped)";
            }
            
            $result['status'] = '✅';
            $result['message'] = $successMessage;
            $result['details'] = [
                'inserted' => $insertCount,
                'errors' => $errorRows,
                'total_rows' => $rowIndex
            ];
            
        } catch (Exception $e) {
            $conn->rollBack();
            $result['message'] = 'Error during data insertion: ' . $e->getMessage();
            $result['debug'] = $debugInfo ?? null;
        }
        
        fclose($handle);
        
    } catch (Exception $e) {
        $result['message'] = 'Error: ' . $e->getMessage();
        $result['debug'] = $debugInfo ?? null;
    }
    
    return $result;
}

function processDataByPageKey($pageKey, $data, $columns) {
    // เงื่อนไข menu std_cost
    if ($pageKey === 'std_cost') {
        // แปลง Std_cost_perunit to decimal
        $colIndex = array_search('Std_cost_perunit', $columns);
        if ($colIndex !== false) {
            $raw = trim(str_replace(',', '', $data[$colIndex]));
            $data[$colIndex] = is_numeric($raw) ? round((float)$raw, 4) : null;
        }
        
        // แปลง Base_qty เป็น int
        $qtyIndex = array_search('Base_qty', $columns);
        if ($qtyIndex !== false) {
            $raw = trim($data[$qtyIndex]);
            $data[$qtyIndex] = is_numeric($raw) ? (int)$raw : null;
        }
    }
    
    // เงื่อนไขของหน้า allocation_basic
    if ($pageKey === 'allocation_basic') {
        foreach (['Non_minus', 'Coefficient_limit', 'Std_alloc'] as $colName) {
            $colIndex = array_search($colName, $columns);
            if ($colIndex !== false && isset($data[$colIndex])) {
                $raw = strtolower(trim($data[$colIndex]));
                $data[$colIndex] = ($raw === 'true' || $raw === '1') ? 1 : 0;
            }
        }
    }
    
    return array_slice($data, 0, count($columns));
}

$selectedPeriod = $_GET['period'] ?? $periods[0] ?? null;

// Handle Prepare Master button click
$prepareResults = [];
if (isset($_POST['prepare_master']) && $selectedPeriod) {
    foreach ($menu_items as $code => $title) {
        $prepareResults[$code] = validateAndInsertData($conn, $code, $selectedPeriod, $table_map);
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simulate Calculation</title>
    <link rel="stylesheet" href="css/item_detail.css">
    <style>
        .prepare-btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            margin: 10px 0;
            font-size: 16px;
        }
        .prepare-btn:hover {
            background-color: #0056b3;
        }
        .status-success {
            color: green;
            font-weight: bold;
        }
        .status-error {
            color: red;
            font-weight: bold;
        }
        .table-container {
            margin-top: 20px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        details {
            margin-top: 5px;
        }
        summary {
            font-weight: bold;
            padding: 2px 0;
        }
        pre {
            white-space: pre-wrap;
            word-wrap: break-word;
        }
    </style>
</head>
<body>
    <h2>Simulate Calculation</h2>
    
    <!-- Period Selection Form -->
    <form method="GET">
        <input type="hidden" name="page" value="simulate_calculation">
        <label for="period">Fiscal Year-Period:</label>
        <select name="period" id="period" onchange="this.form.submit()">
            <?php foreach ($periods as $period): ?>
                <option value="<?= htmlspecialchars($period) ?>" <?= ($period == $selectedPeriod ? 'selected' : '') ?>>
                    <?= htmlspecialchars($period) ?>
                </option>
            <?php endforeach; ?>
        </select>
    </form>

    <?php if ($selectedPeriod): ?>
        <!-- Prepare Master Button -->
        <form method="POST">
            <input type="hidden" name="period" value="<?= htmlspecialchars($selectedPeriod) ?>">
            <button type="submit" name="prepare_master" class="prepare-btn">Prepare Master</button>
        </form>

        <!-- Results Table -->
        <div class="table-container">
            <table>
                <thead>
                    <tr>
                        <th>No.</th>
                        <th>Process</th>
                        <th>Status</th>
                        <th>Message</th>
                    </tr>
                </thead>
                <tbody>
                    <?php 
                    $i = 1;
                    foreach ($menu_items as $code => $title):
                        // ถ้ามีการกด Prepare Master จะใช้ผลลัพธ์จากการประมวลผล
                        if (!empty($prepareResults[$code])) {
                            $status = $prepareResults[$code]['status'];
                            $message = $prepareResults[$code]['message'];
                        } else {
                            // แสดงสถานะเบื้องต้น (เช็คเฉพาะว่าไฟล์มีอยู่หรือไม่)
                            $folder = __DIR__ . '/../uploads/' . $code;
                            $filename = $selectedPeriod . '.csv';
                            $filepath = $folder . '/' . $filename;
                            
                            if (file_exists($filepath)) {
                                $status = '⏳';
                                $message = 'Ready for validation';
                            } else {
                                $status = '❌';
                                $message = 'File not found';
                            }
                        }
                        
                        $statusClass = ($status === '✅') ? 'status-success' : 'status-error';
                    ?>
                        <tr>
                            <td><?= $i++ ?></td>
                            <td><?= htmlspecialchars($title) ?></td>
                            <td class="<?= $statusClass ?>"><?= htmlspecialchars($status) ?></td>
                            <td>
                                <?= htmlspecialchars($message) ?>
                                <?php if (isset($prepareResults[$code]['debug'])): ?>
                                    <details style="margin-top: 5px;">
                                        <summary style="cursor: pointer; color: #007bff;">Debug Info</summary>
                                        <pre style="font-size: 11px; background: #f8f9fa; padding: 5px; margin: 5px 0; border-radius: 3px;">
CSV Columns (<?= $prepareResults[$code]['debug']['csv_columns_count'] ?>): <?= implode(', ', $prepareResults[$code]['debug']['csv_columns']) ?>

DB Columns (<?= $prepareResults[$code]['debug']['db_columns_count'] ?>): <?= implode(', ', $prepareResults[$code]['debug']['db_columns']) ?>

<?php if (!empty($prepareResults[$code]['debug']['missing_in_csv'])): ?>
Missing in CSV: <?= implode(', ', $prepareResults[$code]['debug']['missing_in_csv']) ?>
<?php endif; ?>

<?php if (!empty($prepareResults[$code]['debug']['extra_in_csv'])): ?>
Extra in CSV: <?= implode(', ', $prepareResults[$code]['debug']['extra_in_csv']) ?>
<?php endif; ?>
                                        </pre>
                                    </details>
                                <?php endif; ?>
                                
                                <?php if (isset($prepareResults[$code]['details'])): ?>
                                    <details style="margin-top: 5px;">
                                        <summary style="cursor: pointer; color: #28a745;">Success Details</summary>
                                        <div style="font-size: 12px; margin: 5px 0;">
                                            <strong>Inserted:</strong> <?= $prepareResults[$code]['details']['inserted'] ?> records<br>
                                            <strong>Total Rows:</strong> <?= $prepareResults[$code]['details']['total_rows'] ?>
                                            <?php if (!empty($prepareResults[$code]['details']['errors'])): ?>
                                                <br><strong>Errors:</strong>
                                                <ul style="margin: 5px 0; padding-left: 20px;">
                                                    <?php foreach (array_slice($prepareResults[$code]['details']['errors'], 0, 5) as $error): ?>
                                                        <li style="font-size: 11px;"><?= htmlspecialchars($error) ?></li>
                                                    <?php endforeach; ?>
                                                    <?php if (count($prepareResults[$code]['details']['errors']) > 5): ?>
                                                        <li style="font-size: 11px;">... and <?= count($prepareResults[$code]['details']['errors']) - 5 ?> more</li>
                                                    <?php endif; ?>
                                                </ul>
                                            <?php endif; ?>
                                        </div>
                                    </details>
                                <?php endif; ?>
                            </td>
                        </tr>
                    <?php endforeach; ?>
                </tbody>
            </table>
        </div>
    <?php else: ?>
        <p style="color:red">No period found. Please insert at least one Period in the system.</p>
    <?php endif; ?>
</body>
</html>